# docker-compose --project-name "ecommerce" up -d
services:
  ecommerce.mysql:
    image: mysql:8.3.0
    container_name: ecommerce.mysql
    restart: unless-stopped
    networks:
      - ecommerce-bridge
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 5
      interval: 5s
      timeout: 30s

  ecommerce.api:
    image: ${DOCKER_REGISTRY-}ecommerce.api
    container_name: ecommerce.api
    build:
      context: .
      dockerfile: Ecommerce.API/Dockerfile
    networks:
      - ecommerce-bridge
    env_file: .env
    environment:
      - ApplicationInsights:InstrumentationKey=${APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}
      - ApplicationInsights:ConnectionString=${APPLICATION_INSIGHTS_CONNECTION_STRING}
      - AzureStorage:ConnectionString=""
      - AzureStorage:Container=""
    ports:
      - 7105:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy

  ecommerce.authorization.api:
    image: ${DOCKER_REGISTRY-}ecommerce.authorization.api
    container_name: ecommerce.authorization.api
    build:
      context: .
      dockerfile: Ecommerce.Authorization/Dockerfile
    networks:
      - ecommerce-bridge
    environment:
      - AdminInfo:Password=""
      - EmailSettings:From=""
      - EmailSettings:Password=""
      - EmailSettings:SmtpServer=""
      - EmailSettings:Port=1
      - Twilio:SID=""
      - Twilio:AuthToken=""
      - Twilio:PhoneNumber=""
    ports:
      - 7252:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy

  ecommerce.order.api:
    image: ${DOCKER_REGISTRY-}ecommerce.order.api
    container_name: ecommerce.order.api
    build:
      context: .
      dockerfile: Ecommerce.Order.API/Dockerfile
    networks:
      - ecommerce-bridge
    environment:
      - PayPal:ClientId=""
      - PayPal:ClientSecret=""
    ports:
      - 7204:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy

volumes:
  mysql-data:

networks:
  ecommerce-bridge:
    driver: bridge
