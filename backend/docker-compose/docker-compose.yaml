# docker-compose --project-name "ecommerce" up -d
version: "3.9"
services:
  ecommerce.mysql:
    image: mysql:8.3.0
    container_name: ecommerce.mysql
    restart: unless-stopped
    networks:
      - ecommerce-bridge
    environment:
      MYSQL_DATABASE: ecommerce
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 5
      interval: 5s
      timeout: 30s

  ecommerce.api:
    image: ecommerce.api
    container_name: ecommerce.api
    build:
      context: ../
      dockerfile: Ecommerce.API/Dockerfile
    networks:
      - ecommerce-bridge
    environment:
      - AzureStorage:ConnectionString=""
      - AzureStorage:Container=""
    ports:
      - 7105:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy

  ecommerce.authorization.api:
    image: ecommerce.authorization.api
    container_name: ecommerce.authorization.api
    build:
      context: ../
      dockerfile: Ecommerce.Authorization/Dockerfile
    networks:
      - ecommerce-bridge
    environment:
      - AdminInfo:Password=""
      - EmailSettings:From=""
      - EmailSettings:Password=""
      - EmailSettings:SmtpServer=""
      - EmailSettings:Port=1
      - Twilio:SID=""
      - Twilio:AuthToken=""
      - Twilio:PhoneNumber=""
    ports:
      - 7252:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy

  ecommerce.order.api:
    image: ecommerce.order.api
    container_name: ecommerce.order.api
    build:
      context: ../
      dockerfile: Ecommerce.Order.API/Dockerfile
    networks:
      - ecommerce-bridge
    environment:
      - PayPal:ClientId=""
      - PayPal:ClientSecret=""
    ports:
      - 7204:8080
    depends_on:
      ecommerce.mysql:
        condition: service_healthy


  ecommerce.prometheus:
    image: prom/prometheus
    container_name: ecommerce.prometheus
    restart: unless-stopped
    networks:
      - ecommerce-bridge
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  ecommerce.grafana:
    image: grafana/grafana
    container_name: ecommerce.grafana
    restart: unless-stopped
    networks:
      - ecommerce-bridge
    ports:
      - 3003:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - ecommerce.prometheus

volumes:
  mysql-data:
  prom_data:

networks:
  ecommerce-bridge:
    driver: bridge
